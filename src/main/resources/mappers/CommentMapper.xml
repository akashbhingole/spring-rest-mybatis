<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.mapper.CommentMapper">

	<insert id="insertComment" parameterType="com.example.model.Comment">
	    INSERT INTO comment (post_id, author_id, content, created_at)
	    VALUES (#{comment.postId}, #{comment.authorId}, #{comment.content}, NOW())
	</insert>
	
	<select id="findComments" resultType="com.example.dto.CommentViewDTO">
	    SELECT c.id, c.content, m.username, c.created_at
	    FROM comment c
	    JOIN member m ON c.author_id = m.id
	    WHERE c.post_id = #{postId}
	      <if test="cursor != null">
	        AND c.id &lt; #{cursor}
	      </if>
	    ORDER BY c.id DESC
	    LIMIT #{limit}
	</select>
		
	<select id="findOwnershipById" resultType="com.example.dto.CommentOwnershipDTO">
	    SELECT c.author_id AS commentAuthorId, p.author_id AS postAuthorId
	    FROM comment c
	    JOIN post p ON c.post_id = p.id
	    WHERE c.id = #{commentId}
	</select>
	
	<delete id="deleteComment">
	    DELETE FROM comment WHERE id = #{commentId}
	</delete>
			

</mapper>
